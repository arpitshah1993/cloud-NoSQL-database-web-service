/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2017-09-02 16:14:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<script>\n");
      out.write("function clickEvent() {\n");
      out.write("    var url=\"http://localhost:8080/database/api/db/\"+document.getElementById(\"query\").value;\n");
      out.write("    var authName=document.getElementById(\"AuthName\").value;\n");
      out.write("\tvar authPass=document.getElementById(\"AuthPass\").value;\n");
      out.write("\t\n");
      out.write("\tvar authorizationBasic = btoa( authName+ \":\" +authPass );\n");
      out.write("\tdocument.getElementById(\"result\").value=\"Working...\";\n");
      out.write("\tvar request = new XMLHttpRequest();\n");
      out.write("\trequest.onreadystatechange = function() {\n");
      out.write("\t    if (request.readyState === 4) {\n");
      out.write("\t        if (request.status === 200) {\n");
      out.write("\t        \tvar val=document.getElementById(\"result\").value;\n");
      out.write("\t        \tdocument.getElementById(\"result\").value=request.responseText;\n");
      out.write("\t        } else {\n");
      out.write("\t        \tdocument.getElementById(\"result\").value=\"Error Occurred. \\n\"+request.responseText;\n");
      out.write("\t        }\n");
      out.write("\t    }\n");
      out.write("\t};\n");
      out.write("\trequest.open(\"GET\", url , true);\n");
      out.write("\trequest.setRequestHeader('Authorization', 'Basic ' + authorizationBasic);\n");
      out.write("\trequest.setRequestHeader('Accept', 'application/json');\n");
      out.write("\trequest.send(null);\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<u><h3>AUSHA</h3></u>\n");
      out.write("<h2>NoSQL Pluggable Database</h2>\n");
      out.write("Enter your query:<br>\n");
      out.write("<textarea id=\"query\" type=\"text\"  rows=\"4\" cols=\"90\" value=\"\">\n");
      out.write("</textarea>\n");
      out.write("<br>\n");
      out.write(" Privileged User:<br>\n");
      out.write("<input type=\"text\" id=\"AuthName\" name=\"AuthName\" placeholder=\"Username\"><input type=\"password\" id=\"AuthPass\" name=\"AuthPass\" placeholder=\"Password\"><button id=\"button\" onclick='clickEvent()'> Execute </button>\n");
      out.write("<!-- <br>\n");
      out.write("<button id=\"button0\" onclick='clickEvent()'> Execute </button> -->\n");
      out.write("<br>\n");
      out.write("ResultNN<br>\n");
      out.write("<textarea id=\"result\" type=\"text\"  rows=\"4\" cols=\"90\" value=\"\">\n");
      out.write("</textarea>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("Not have an account? Want to add user?<br>\n");
      out.write("<a href=\"/database/createUser.jsp\">Add User</a>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write(" \n");
      out.write(" \n");
      out.write(" \n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
